import{useImmer as e}from"use-immer";const t=t=>{const[n,d]=e(t);return{list:n,update(e,t){d(n=>{const d=n.find(e);d&&t(d)})},delete(e){d(n.filter(t=>!e(t)))},findOne:e=>n.find(e),findMany:e=>n.filter(e),push(e){d(t=>{t.push(e)})},pop(){d(e=>{e.pop()})}}};function n(){return n=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var d in n)Object.prototype.hasOwnProperty.call(n,d)&&(e[d]=n[d])}return e},n.apply(this,arguments)}const d=e=>{const d=t(e);return n({},d,{updateById(e,t){d.update(t=>t.id===e,t)},deleteById(e){d.delete(t=>t.id===e)},deleteByItem({id:e}){d.delete(t=>t.id===e)},findById:e=>d.findOne(t=>t.id===e),findManyById:e=>d.findMany(t=>t.id===e)})};export{t as useList,d as useListWithId};
//# sourceMappingURL=index.modern.mjs.map
